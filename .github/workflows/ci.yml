name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libglib2.0-dev libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config
    
    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: |
        choco install pkgconfiglite
    
    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install pkg-config
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: clippy, rustfmt
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        shared-key: "rcp-${{ runner.os }}"
    
    - name: Check code formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy with warnings as errors
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose
      env:
        PKG_CONFIG_PATH: ${{ runner.os == 'Windows' && 'C:\ProgramData\chocolatey\lib\pkgconfiglite\tools\bin' || '' }}
    
    - name: Run tests
      run: cargo test --all-targets --all-features --verbose
      if: ${{ !contains(github.event.head_commit.message, '[skip-tests]') }}
      env:
        PKG_CONFIG_PATH: ${{ runner.os == 'Windows' && 'C:\ProgramData\chocolatey\lib\pkgconfiglite\tools\bin' || '' }}
    
    - name: Build docs
      run: cargo doc --no-deps --verbose